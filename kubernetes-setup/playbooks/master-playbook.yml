---
- hosts: master
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      src: "{{ item }}" 
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
    tags: start_ks

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }} --cgroup-driver=cgroupfs
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
    tags: start_ks

  - name: Initialize the Kubernetes cluster using kubeadm
    become: yes
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name master --pod-network-cidr={{ pod_network_cidr }} --ignore-preflight-errors=all

  - name: Setup kubeconfig for vagrant user
    file:
      path: /home/vagrant/.kube
      state: directory
      owner: vagrant
      group: vagrant

  - name: Change Ownership for conf file
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      remote_src: True
 
  - name: Download calico pod network file
    become: yes
    get_url:
      url: "{{ calico_url }}"
      dest: "/tmp/calico.yaml"
      mode: 0775
      force: yes

  - name: Modify the calico yaml file
    command: sed -i -e "s?192.168.0.0/16?172.16.0.0/16?g" /tmp/calico.yaml

#  - name: Apply API url
#    command: "kubectl apply -f {{ etcd_api_url }}"

  - name: Apply the pod network
    command: "kubectl apply -f /tmp/calico.yaml"
    become: false
    tags: calico

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Copy Kubectl file
    fetch:
      src: /home/vagrant/.kube/config
      dest: /home/allan/.kube/config
      flat: yes

  handlers:
    - name: docker status
      service: name=docker state=started
